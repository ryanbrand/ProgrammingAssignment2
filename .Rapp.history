file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
dir.create("testdir2/testdir3", recursive=T)
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2")
unlink("testdir2", recursive=TRUE)
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive=TRUE)
1:20
pi:10
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2) each=10)
rep(c(0, 1, 2), each=10)
library(swirl)
rm(list=ls())
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect[num_vect < 1]
tf <- num_vect < 1
tf
new_vect <- num_vect >= 6
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Ryan")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
print(my_na)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2 <- c("foo", "bar", "norf"))
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, myy_matrix2)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cvec <- c("patient", "age", "weight", "bp", "rating", "test")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
library(swirl)
rm(list=ls())
swirl()
TRUE==TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5 != 7
!(5==7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 < 8 || 6 != 8 && 4 > 3.9
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
x <- list(a = 1.5, b = rnorm(10))
lapply(x, mean)
x <- list(a = 1:5, b = rnorm(10))
lapply(x, mean)
x <- matrix(rnorm(200), 20, 10)
apply(x, 2, mean)
apply(x, 1, quantile, probs = c(.25, .75))
a <- array(rnorm(2*2*10), c(2, 2, 10))
apply(a, c(1,2), mean)
rowMeans(a, dims=2)
str(tapply)
str(split)
x <- c(rnorm(10), runif(10), rnorm(10,1))
f <- gl(3, 10)
split(x, f)
lapply(split(x, f), mean)
library(datasets)
head(airquality)
s <- split(airquality, airquality$month)
s <- split(airquality, airquality$Month)
lapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")]))
sapply(s, function(x) colMeans(x[, c("Ozone", "Solar.R", "Wind")], na.rm = TRUE))
x <- rnorm(10)
f1 <- gl(2,5)
f2 <- gl(5,2)
f1
f2
interaction(f1, f2)
str(split(x, list(f1, f2)))
str(split(x, list(f1, f2), drop=TRUE))
log(-1)
library(datasets)
data(iris)
?iris
head(iris)
x <- iris$virginica
head(x)
x <-
q
x <- iris(, Species=virginica)
x <- iris[, Species=virginica]
subset(iris, Species=virginica)
library(datasets)
data(iris)
head(iris)
x <- iris[iris$species == 'virginica']
head(x)
x
x <- iris[iris$species == 'virginica',]
head(x)
x <- iris[iris$Species == 'virginica', ]
head(x)
mean(x[, x$Sepal.length])
mean(x$Sepal.length)
x
x$Sepal.length
x[,x$Sepal.length]
x$Sepal.length
colMeans(x)
lapply(x, FUN=colMeans)
x
y <- x[, x$Sepal.length]
y
as.data.frame(x)
x$Sepal.length
x
x$Species
x$Sepal.Length
mean(x$Sepal.Length)
apply(iris[, 1:4], 2, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 1, mean)
library(datasets)
data(mtcars)
head(mtcars)
mean(mtcars$mpg, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
with(mtcars, tapply(mpg, cyl, mean))
head(mtcars)
with(mtcars, tapply(hp, cyl, mean))
209.21429-82.63636
debug(ls)
ls()
n
sapply(split(mtcars$mpg, mtcars$cyl), mean)
x = rbind(c(1, -1/4), c(-1/4, 1))
matrix = makeCacheMatrix(x)
source("cachematrix.R")
matrix = makeCacheMatrix(x)
matrix$get()
cacheSolve(matrix)
source("cachematrix.R")
matrix = makeCacheMatrix(x)
matrix$get()
cacheSolve(matrix)
source("cachematrix.R")
matrix <- makeCacheMatrix(x)
matrix
matrix <- makeCacheMatrix(x)
matrix$getinverse
matrix$getinverse()
x = rbind(c(1, -1/4), c(-1/4, 1))
x
y <- makeCacheMatrix(x)
y$getinverse
y$getinverse()
y
y$get()
z <- cacheSolve(y)
cacheSolve(y)
source("cachematrix.R")
x <- makeCacheMatrix()
x
x = rbind(c(1, -1/4), c(-1/4, 1))
y <- makeCacheMatrix(x)
cacheSolve(y)
